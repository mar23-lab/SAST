{
  "extends": [
    "eslint:recommended",
    "@typescript-eslint/recommended"
  ],
  "plugins": [
    "security",
    "@typescript-eslint"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2022,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "env": {
    "browser": true,
    "node": true,
    "es2022": true,
    "jest": true
  },
  "rules": {
    // Security-focused rules
    "security/detect-buffer-noassert": "error",
    "security/detect-child-process": "error",
    "security/detect-disable-mustache-escape": "error",
    "security/detect-eval-with-expression": "error",
    "security/detect-no-csrf-before-method-override": "error",
    "security/detect-non-literal-fs-filename": "warn",
    "security/detect-non-literal-regexp": "warn",
    "security/detect-non-literal-require": "warn",
    "security/detect-object-injection": "warn",
    "security/detect-possible-timing-attacks": "warn",
    "security/detect-pseudoRandomBytes": "error",
    "security/detect-unsafe-regex": "error",
    "security/detect-bidi-characters": "error",
    
    // Dangerous JavaScript patterns
    "no-eval": "error",
    "no-implied-eval": "error",
    "no-new-func": "error",
    "no-script-url": "error",
    
    // XSS prevention
    "no-inner-declarations": "error",
    "no-proto": "error",
    "no-return-assign": "error",
    
    // Code injection prevention
    "no-new-require": "error",
    "no-path-concat": "error",
    
    // Prototype pollution prevention
    "no-prototype-builtins": "error",
    
    // TypeScript security rules
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-unsafe-assignment": "warn",
    "@typescript-eslint/no-unsafe-call": "warn",
    "@typescript-eslint/no-unsafe-member-access": "warn",
    "@typescript-eslint/no-unsafe-return": "warn",
    
    // General security best practices
    "eqeqeq": ["error", "always"],
    "no-var": "error",
    "prefer-const": "error",
    "strict": ["error", "global"],
    
    // Prevent potential security issues
    "no-console": "warn",
    "no-debugger": "error",
    "no-alert": "error",
    "no-empty": "error",
    "no-unreachable": "error",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }]
  },
  "overrides": [
    {
      "files": ["*.test.js", "*.test.ts", "*.spec.js", "*.spec.ts"],
      "rules": {
        "security/detect-non-literal-require": "off",
        "no-console": "off"
      }
    },
    {
      "files": ["*.config.js", "*.config.ts"],
      "rules": {
        "security/detect-non-literal-require": "off"
      }
    }
  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}
