name: ðŸ”’ SAST Security Scan

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  workflow_dispatch:

env:
  CONFIG_FILE: ci-config-generated.yaml

jobs:
  sast-scan:
    name: Security Analysis
    runs-on: ubuntu-latest
    
    permissions:
      actions: read
      contents: read
      security-events: write
    
    strategy:
      fail-fast: false
      matrix:
        scanner: [codeql, semgrep, bandit, eslint]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Load SAST configuration
      id: config
      run: |
        if [ -f "$CONFIG_FILE" ]; then
          echo "Using configuration: $CONFIG_FILE"
          yq eval '.sast.scanners[]' $CONFIG_FILE | grep -q "${{ matrix.scanner }}" && echo "enabled=true" >> $GITHUB_OUTPUT || echo "enabled=false" >> $GITHUB_OUTPUT
        else
          echo "enabled=true" >> $GITHUB_OUTPUT
        fi
    
    - name: Initialize CodeQL
      if: matrix.scanner == 'codeql' && steps.config.outputs.enabled == 'true'
      uses: github/codeql-action/init@v3
      with:
        languages: javascript, python, java, go, csharp
    
    - name: Run CodeQL Analysis
      if: matrix.scanner == 'codeql' && steps.config.outputs.enabled == 'true'
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:multi"
    
    - name: Run Semgrep
      if: matrix.scanner == 'semgrep' && steps.config.outputs.enabled == 'true'
      uses: semgrep/semgrep-action@v1
      with:
        config: auto
        generateSarif: "1"
      env:
        SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
    
    - name: Set up Python for Bandit
      if: matrix.scanner == 'bandit' && steps.config.outputs.enabled == 'true'
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Run Bandit Security Scan
      if: matrix.scanner == 'bandit' && steps.config.outputs.enabled == 'true'
      run: |
        pip install bandit[toml]
        bandit -r . -f sarif -o bandit-results.sarif || true
        [ -f bandit-results.sarif ] && echo "Bandit scan completed"
    
    - name: Set up Node.js for ESLint
      if: matrix.scanner == 'eslint' && steps.config.outputs.enabled == 'true'
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Run ESLint Security Scan
      if: matrix.scanner == 'eslint' && steps.config.outputs.enabled == 'true'
      run: |
        if [ -f package.json ]; then
          npm install --save-dev eslint @microsoft/eslint-formatter-sarif
          npx eslint . --format @microsoft/eslint-formatter-sarif --output-file eslint-results.sarif || true
          echo "ESLint scan completed"
        fi
    
    - name: Upload SARIF results
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: |
          semgrep.sarif
          bandit-results.sarif
          eslint-results.sarif
      continue-on-error: true
    
    - name: Send notifications
      if: always()
      run: |
        echo "ðŸ”’ SAST scan completed for ${{ matrix.scanner }}"
        # Additional notification logic would go here
