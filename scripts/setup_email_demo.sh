#!/bin/bash

# ===================================================================
# Email Demo Setup Script
# ===================================================================
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å MailHog
# Usage: ./setup_email_demo.sh

set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üìß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ demo email –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è MailHog
MAILHOG_SMTP_HOST="${EMAIL_SMTP_SERVER:-localhost}"
MAILHOG_SMTP_PORT="${EMAIL_SMTP_PORT:-1025}"
MAILHOG_WEB_PORT="8025"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è demo —Ä–µ–∂–∏–º–∞
update_config_for_email_demo() {
    echo -e "${BLUE}üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è email demo...${NC}"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è demo
    local demo_config_file="ci-config-email-demo.yaml"
    
    # –ö–æ–ø–∏—Ä—É–µ–º –±–∞–∑–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    cp ci-config.yaml "$demo_config_file"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º email –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è demo
    if command -v yq >/dev/null 2>&1; then
        yq eval '.demo_mode.enabled = true' -i "$demo_config_file"
        yq eval '.notifications.email.enabled = true' -i "$demo_config_file"
        yq eval '.notifications.email.smtp_server = "'"$MAILHOG_SMTP_HOST"'"' -i "$demo_config_file"
        yq eval '.notifications.email.smtp_port = '"$MAILHOG_SMTP_PORT"'' -i "$demo_config_file"
        yq eval '.notifications.email.sender_email = "sast-demo@test.local"' -i "$demo_config_file"
        yq eval '.notifications.email.sender_name = "SAST Demo Bot"' -i "$demo_config_file"
        yq eval '.notifications.email.recipients = ["security-team@test.local", "devops-team@test.local"]' -i "$demo_config_file"
        yq eval '.notifications.email.subject_prefix = "[üß™ SAST DEMO]"' -i "$demo_config_file"
        yq eval '.notifications.trigger = "always"' -i "$demo_config_file"
        
        echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è email demo${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  yq –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è${NC}"
    fi
    
    export EMAIL_DEMO_CONFIG="$demo_config_file"
}

# –°–æ–∑–¥–∞–Ω–∏–µ HTML —à–∞–±–ª–æ–Ω–∞ –¥–ª—è email
create_email_template() {
    echo -e "${BLUE}üìù –°–æ–∑–¥–∞–Ω–∏–µ HTML —à–∞–±–ª–æ–Ω–∞ –¥–ª—è email...${NC}"
    
    mkdir -p templates
    
    cat > templates/email-notification.html << 'EOF'
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SAST Scan Results</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
        }
        .header {
            background: #2c3e50;
            color: white;
            padding: 20px;
            text-align: center;
            border-radius: 5px 5px 0 0;
        }
        .content {
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }
        .status {
            padding: 10px;
            border-radius: 5px;
            text-align: center;
            font-weight: bold;
            margin: 10px 0;
        }
        .status.success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        .status.failure {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        .metrics {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 10px;
            margin: 20px 0;
        }
        .metric {
            background: white;
            padding: 15px;
            border-radius: 5px;
            text-align: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .metric .value {
            font-size: 2em;
            font-weight: bold;
            margin-bottom: 5px;
        }
        .metric .label {
            color: #666;
            font-size: 0.9em;
        }
        .critical { color: #dc3545; }
        .high { color: #fd7e14; }
        .medium { color: #ffc107; }
        .low { color: #6c757d; }
        .footer {
            background: #34495e;
            color: white;
            padding: 15px;
            text-align: center;
            border-radius: 0 0 5px 5px;
            font-size: 0.9em;
        }
        .demo-badge {
            background: #17a2b8;
            color: white;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.8em;
            display: inline-block;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="demo-badge">üß™ DEMO MODE</div>
        <h1>{{SCAN_TITLE}}</h1>
        <p>{{REPOSITORY}} ‚Ä¢ {{BRANCH}} ‚Ä¢ {{TIMESTAMP}}</p>
    </div>
    
    <div class="content">
        <div class="status {{STATUS_CLASS}}">
            {{STATUS_EMOJI}} Status: {{STATUS}}
        </div>
        
        <h3>üìä Vulnerability Summary</h3>
        <div class="metrics">
            <div class="metric">
                <div class="value critical">{{CRITICAL_COUNT}}</div>
                <div class="label">üî¥ Critical</div>
            </div>
            <div class="metric">
                <div class="value high">{{HIGH_COUNT}}</div>
                <div class="label">üü† High</div>
            </div>
            <div class="metric">
                <div class="value medium">{{MEDIUM_COUNT}}</div>
                <div class="label">üü° Medium</div>
            </div>
            <div class="metric">
                <div class="value low">{{LOW_COUNT}}</div>
                <div class="label">üîµ Low</div>
            </div>
        </div>
        
        <h3>üìã Scan Details</h3>
        <ul>
            <li><strong>Total Findings:</strong> {{TOTAL_FINDINGS}}</li>
            <li><strong>Files Scanned:</strong> {{FILES_SCANNED}}</li>
            <li><strong>Scan Duration:</strong> {{SCAN_DURATION}}</li>
            <li><strong>Scanners Used:</strong> {{SCANNERS_USED}}</li>
        </ul>
        
        {{#if CUSTOM_MESSAGE}}
        <h3>‚ÑπÔ∏è Additional Information</h3>
        <p>{{CUSTOM_MESSAGE}}</p>
        {{/if}}
        
        <p>
            <a href="{{GITHUB_URL}}" style="background: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;">
                üìÇ View Repository
            </a>
            {{#if DASHBOARD_URL}}
            <a href="{{DASHBOARD_URL}}" style="background: #28a745; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; margin-left: 10px;">
                üìä View Dashboard
            </a>
            {{/if}}
        </p>
    </div>
    
    <div class="footer">
        <p>üß™ This is a demonstration email generated by SAST Demo Mode</p>
        <p>Generated at {{TIMESTAMP}} ‚Ä¢ Powered by SAST Security Boilerplate</p>
    </div>
</body>
</html>
EOF

    echo -e "${GREEN}‚úÖ HTML —à–∞–±–ª–æ–Ω —Å–æ–∑–¥–∞–Ω${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ email
send_test_email() {
    local status="${1:-success}"
    local scenario="${2:-normal}"
    
    echo -e "${BLUE}üìß –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ email (status: $status, scenario: $scenario)...${NC}"
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º demo –¥–∞–Ω–Ω—ã–µ
    local critical=1 high=3 medium=8 low=5
    case "$scenario" in
        "critical")
            critical=5; high=12; medium=25; low=10
            ;;
        "failure")
            critical=0; high=0; medium=0; low=0
            ;;
        "success")
            critical=0; high=0; medium=2; low=3
            ;;
    esac
    
    local total=$((critical + high + medium + low))
    local timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
    local repository="${GITHUB_REPOSITORY:-demo/sast-boilerplate}"
    local branch="${GITHUB_REF_NAME:-main}"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ email
    local email_subject="[üß™ SAST DEMO] ${status^^} - $repository"
    local email_body
    email_body=$(cat << EOF
Subject: $email_subject
From: SAST Demo Bot <sast-demo@test.local>
To: security-team@test.local, devops-team@test.local
Content-Type: text/html; charset=UTF-8

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
        .header { background: #2c3e50; color: white; padding: 20px; text-align: center; }
        .content { padding: 20px; background: #f9f9f9; }
        .status { padding: 10px; border-radius: 5px; text-align: center; font-weight: bold; margin: 10px 0; }
        .success { background: #d4edda; color: #155724; }
        .failure { background: #f8d7da; color: #721c24; }
        .metrics { display: grid; grid-template-columns: repeat(4, 1fr); gap: 10px; margin: 20px 0; }
        .metric { background: white; padding: 15px; text-align: center; border-radius: 5px; }
        .demo-badge { background: #17a2b8; color: white; padding: 5px 10px; border-radius: 15px; font-size: 0.8em; }
    </style>
</head>
<body>
    <div class="header">
        <div class="demo-badge">üß™ DEMO MODE</div>
        <h1>SAST Scan Report</h1>
        <p>$repository ‚Ä¢ $branch ‚Ä¢ $timestamp</p>
    </div>
    
    <div class="content">
        <div class="status $([ "$status" = "success" ] && echo "success" || echo "failure")">
            $([ "$status" = "success" ] && echo "‚úÖ" || echo "‚ùå") Status: ${status^^}
        </div>
        
        <h3>üìä Vulnerability Summary</h3>
        <div class="metrics">
            <div class="metric">
                <div style="font-size: 2em; color: #dc3545;">$critical</div>
                <div>üî¥ Critical</div>
            </div>
            <div class="metric">
                <div style="font-size: 2em; color: #fd7e14;">$high</div>
                <div>üü† High</div>
            </div>
            <div class="metric">
                <div style="font-size: 2em; color: #ffc107;">$medium</div>
                <div>üü° Medium</div>
            </div>
            <div class="metric">
                <div style="font-size: 2em; color: #6c757d;">$low</div>
                <div>üîµ Low</div>
            </div>
        </div>
        
        <h3>üìã Scan Details</h3>
        <ul>
            <li><strong>Total Findings:</strong> $total</li>
            <li><strong>Files Scanned:</strong> 247</li>
            <li><strong>Scan Duration:</strong> 2m 15s</li>
            <li><strong>Scanners Used:</strong> CodeQL, Semgrep, Bandit, ESLint</li>
        </ul>
        
        <p>
            <a href="https://github.com/$repository" style="background: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;">
                üìÇ View Repository
            </a>
            <a href="http://localhost:3000/d/sast-security-dashboard" style="background: #28a745; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; margin-left: 10px;">
                üìä View Dashboard
            </a>
        </p>
    </div>
    
    <div style="background: #34495e; color: white; padding: 15px; text-align: center; font-size: 0.9em;">
        <p>üß™ This is a demonstration email generated by SAST Demo Mode</p>
        <p>Generated at $timestamp ‚Ä¢ Powered by SAST Security Boilerplate</p>
    </div>
</body>
</html>
EOF
)
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ email —á–µ—Ä–µ–∑ MailHog
    if command -v curl >/dev/null 2>&1; then
        if echo "$email_body" | curl -s --url "smtp://$MAILHOG_SMTP_HOST:$MAILHOG_SMTP_PORT" \
           --mail-from "sast-demo@test.local" \
           --mail-rcpt "security-team@test.local" \
           --mail-rcpt "devops-team@test.local" \
           --upload-file - > /dev/null; then
            echo -e "${GREEN}‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ${NC}"
            echo -e "${BLUE}üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ MailHog Web UI: http://localhost:$MAILHOG_WEB_PORT${NC}"
        else
            echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email${NC}"
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è  curl –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email${NC}"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ MailHog
check_mailhog_status() {
    echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ MailHog...${NC}"
    
    if command -v curl >/dev/null 2>&1; then
        if curl -s "http://localhost:$MAILHOG_WEB_PORT" > /dev/null; then
            echo -e "${GREEN}‚úÖ MailHog Web UI –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É $MAILHOG_WEB_PORT${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è  MailHog Web UI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        fi
        
        if curl -s "smtp://localhost:$MAILHOG_SMTP_PORT" > /dev/null 2>&1; then
            echo -e "${GREEN}‚úÖ MailHog SMTP —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É $MAILHOG_SMTP_PORT${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è  MailHog SMTP —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        fi
    fi
}

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
demo_email_scenarios() {
    echo -e "${BLUE}üìß –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö email —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤...${NC}"
    
    echo -e "${CYAN}1. –£—Å–ø–µ—à–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ...${NC}"
    send_test_email "success" "success"
    sleep 2
    
    echo -e "${CYAN}2. –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ —É—è–∑–≤–∏–º–æ—Å—Ç—è–º–∏...${NC}"
    send_test_email "failure" "critical"
    sleep 2
    
    echo -e "${CYAN}3. –ù–µ—É–¥–∞—á–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ...${NC}"
    send_test_email "failure" "failure"
    sleep 2
    
    echo -e "${CYAN}4. –û–±—ã—á–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ...${NC}"
    send_test_email "success" "normal"
    
    echo -e "${GREEN}‚úÖ –í—Å–µ demo emails –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã${NC}"
    echo -e "${BLUE}üåê –û—Ç–∫—Ä–æ–π—Ç–µ MailHog Web UI –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞: http://localhost:$MAILHOG_WEB_PORT${NC}"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ email demo setup...${NC}"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    update_config_for_email_demo
    
    # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω
    create_email_template
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å MailHog
    check_mailhog_status
    
    echo
    echo -e "${BLUE}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
    echo "1) –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–¥–∏–Ω —Ç–µ—Å—Ç–æ–≤—ã–π email"
    echo "2) –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤"
    echo "3) –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å MailHog"
    echo "4) –í—ã—Ö–æ–¥"
    
    read -p "–í–≤–µ–¥–∏—Ç–µ –≤—ã–±–æ—Ä (1-4): " choice
    
    case $choice in
        1)
            echo "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ü–µ–Ω–∞—Ä–∏–π:"
            echo "1) Success"
            echo "2) Critical vulnerabilities"
            echo "3) Scan failure"
            echo "4) Normal scan"
            read -p "–°—Ü–µ–Ω–∞—Ä–∏–π (1-4): " scenario_choice
            
            case $scenario_choice in
                1) send_test_email "success" "success" ;;
                2) send_test_email "failure" "critical" ;;
                3) send_test_email "failure" "failure" ;;
                4) send_test_email "success" "normal" ;;
                *) echo "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä" ;;
            esac
            ;;
        2)
            demo_email_scenarios
            ;;
        3)
            check_mailhog_status
            ;;
        4)
            echo "–í—ã—Ö–æ–¥..."
            exit 0
            ;;
        *)
            echo "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
            ;;
    esac
    
    echo -e "${GREEN}‚úÖ Email demo setup –∑–∞–≤–µ—Ä—à–µ–Ω${NC}"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
